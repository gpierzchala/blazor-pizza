@page "/checkout"
@inject HttpClient HttpClient
@inject IUriHelper UriHelper
@inject OrderState OrderState

<div class="main">
    <EditForm Model="@OrderState.Order.DeliveryAddress" OnValidSubmit="@PlaceOrder">
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>Review order</h4>
                <OrderReview Order="@OrderState.Order" />
            </div>

            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                <AddressEditor Address="@OrderState.Order.DeliveryAddress" />
            </div>
        </div>

        <button type="submit" class="checkout-button btn btn-warning" disabled="@isSubmitting">
            Place order
        </button>

        <DataAnnotationsValidator />
    </EditForm>
</div>

@functions {
    bool isSubmitting = false;

    async Task PlaceOrder()
    {
        isSubmitting = true;

        var newOrderId = await HttpClient.PostJsonAsync<int>
    ("orders", OrderState.Order);
        OrderState.ResetOrder();
        UriHelper.NavigateTo($"myorders/{newOrderId}");

        isSubmitting = false;
    }
}
